name: Movie app CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm install

      - name: run vitest
        run: npm run test

      - run: npm run build
  e2e:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm install

      - name: Setup supabase
        run: npx supabase start

      - name: install playwright
        run: npx playwright install

      - name: install deps
        run: npx playwright install-deps

      - run: NODE_ENV=test npm run build

      - name: Create dot env file
        run: |
          touch .env
          echo "APP_SUPABASE_URL=${{ secrets.APP_SUPABASE_URL }}" >> .env
          echo "APP_SUPABASE_SECRET_KEY=${{ secrets.APP_SUPABASE_SECRET_KEY }}" >> .env
          echo "COOKIE_SECRETS=${{ secrets.COOKIE_SECRETS }}" >> .env
          echo "TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" >> .env

      - name: run playwright test
        run: npm run test:playwright

  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    strategy:
      matrix:
        node-version: [16.x]
    needs: [build, e2e]
    permissions:
      contents: read
      deployments: write
    name: Deploy to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - run: npm install && npm run build

      - name: Publish
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: "movie-note-app"
          directory: "public"
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
